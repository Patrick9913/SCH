import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { TriskaProvider } from "./context/triskaContext";
import { AnnouncementsProvider } from "./context/announcementsContext";
import { MessagesProvider } from "./context/messagesContext";
import { ChatProvider } from "./context/chatContext";
import { AttendanceProvider } from "./context/attendanceContext";
import { GradesProvider } from "./context/gradesContext";
import { SettingsProvider } from "./context/settingsContext";
import { AuthContextProvider } from "./context/authContext";
import { SubjectProvider } from "./context/subjectContext";
import { ScheduleProvider } from "./context/scheduleContext";
import { Toaster } from 'react-hot-toast';

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} bg-gradient-to-tl from-gray-800 to-gray-900 antialiased`}
      >
        <AuthContextProvider>
            <SettingsProvider>
              <AnnouncementsProvider>
                <MessagesProvider>
                  <AttendanceProvider>
                      <TriskaProvider>
                        <SubjectProvider>
                        <ChatProvider>
                          <GradesProvider>
                            <ScheduleProvider>
                            <Toaster 
                              position="top-right"
                              toastOptions={{
                                duration: 4000,
                                style: {
                                  background: '#363636',
                                  color: '#fff',
                                },
                                success: {
                                  iconTheme: {
                                    primary: '#10b981',
                                    secondary: '#fff',
                                  },
                                },
                                error: {
                                  iconTheme: {
                                    primary: '#ef4444',
                                    secondary: '#fff',
                                  },
                                },
                              }}
                            />
                            {children}
                            </ScheduleProvider>
                          </GradesProvider>
                        </ChatProvider>
                        </SubjectProvider>
                      </TriskaProvider>
                    </AttendanceProvider>
                  </MessagesProvider>
                </AnnouncementsProvider>
              </SettingsProvider>
          </AuthContextProvider>
      </body>
    </html>
  );
}
