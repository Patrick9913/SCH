rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Reglas para usuarios
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Reglas para mensajes directos (sistema existente)
    match /direct_messages/{messageId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid in resource.data.participants || 
         request.auth.uid in request.resource.data.participants);
    }
    
    // Reglas para chats
    match /chats/{chatId} {
      allow read, write: if request.auth != null && 
        request.auth.uid in resource.data.participants;
      
      // Reglas para mensajes dentro de chats
      match /messages/{messageId} {
        allow read, write: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
      }
    }
    
    // Reglas para anuncios
    match /announcements/{announcementId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Reglas para configuración del sistema
    match /system/settings {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 1;
    }
    
    // Reglas para asistencia
    match /attendance/{attendanceId} {
      allow read, write: if request.auth != null;
    }
    
    // Reglas para calificaciones
    match /grades/{gradeId} {
      function isStaff() {
        return request.auth != null && 
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in [1, 4];
      }
      
      function isMainAdmin() {
        return request.auth != null && 
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 1;
      }
      
      // Los estudiantes solo pueden leer sus propias calificaciones publicadas
      // El staff puede leer todas las calificaciones
      allow read: if request.auth != null && (
        (request.auth.uid == resource.data.studentUid && resource.data.published == true) ||
        isStaff()
      );
      
      // Solo staff puede crear calificaciones
      allow create: if request.auth != null && isStaff();
      
      // Solo quien creó la calificación o el admin puede actualizar/eliminar
      allow update, delete: if request.auth != null && (
        request.auth.uid == resource.data.createdByUid ||
        isMainAdmin()
      );
    }
  }
}

